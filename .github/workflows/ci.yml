name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  repo-guards:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.3'
      - uses: actions/setup-node@v4
        with:
          node-version: '22.17.1'
      - name: Pin pnpm version via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.17.1 --activate
          pnpm -v
      - name: Run repository guards
        run: python ops/ci/guards.py
      - name: Enforce standardized versions
        run: python ops/ci/check_versions.py
      - name: Lint commit messages (recent commits)
        run: |
          # Check up to last 30 commits in this ref
          RANGE="$(git rev-list --count HEAD)"
          COUNT=$([ "$RANGE" -gt 30 ] && echo 30 || echo "$RANGE")
          pnpm dlx @commitlint/cli@20.1.0 --config docs/commitlint.config.cjs --from=HEAD~$COUNT --to=HEAD || true

  python:
    needs: repo-guards
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r apps/api/requirements.txt -r apps/api/requirements-dev.txt
          pip install pip-audit bandit
      - name: Lint
        run: ruff check apps/api
      - name: Type check
        run: python -m pyright --project pyrightconfig.json
      - name: Pytest collect guard
        env:
          GITHUB_BASE_REF: ${{ github.base_ref }}
        run: python ops/ci/pytest_guard.py
      - name: Run tests
        run: pytest -q
      - name: Security scan (bandit)
        run: bandit -r apps/api -x apps/api/migrations -q
      - name: Dependency audit (pip-audit)
        run: pip-audit -r apps/api/requirements.txt -r apps/api/requirements-dev.txt --strict
      - name: Compile bytecode
        run: python -m compileall apps/api

  web:
    needs: repo-guards
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.17.1'
      - name: Install dependencies
        run: |
          corepack enable
          corepack prepare pnpm@10.17.1 --activate
          pnpm -C apps/web install --frozen-lockfile
      - name: Build
        run: pnpm -C apps/web build
      - name: Accessibility smoke (axe)
        run: pnpm -C apps/web exec vitest run __tests__/a11y-smoke.test.tsx --silent
      - name: Bundle size check (raw JS total â‰¤ 1000KB)
        run: node apps/web/scripts/check-bundle-size.mjs --max-kb 1000
      - name: Dependency audit (pnpm)
        run: pnpm -C apps/web audit --audit-level=high

  secrets-scan:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}

  semgrep:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: returntocorp/semgrep-action@v1
        with:
          config: p/ci
