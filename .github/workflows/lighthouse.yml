name: lighthouse

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lhci:
    name: Web Lighthouse (Perf/A11y)
    runs-on: ubuntu-latest
    # Draft PR에서는 실행하지 않고, main push 또는 Ready for Review 상태에서만 실행
    if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false) }}
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.17.1
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install deps (web)
        run: pnpm -C apps/web install

      - name: Build (web)
        run: pnpm -C apps/web build

      - name: Start server
        run: pnpm -C apps/web start &

      - name: Wait for server
        run: |
          for i in {1..60}; do
            if curl -sSf http://localhost:3000 >/dev/null; then echo ready; exit 0; fi
            sleep 2
          done
          echo "server did not start" && exit 1

      - name: Lighthouse CI
        id: lhci
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            http://localhost:3000/
            http://localhost:3000/about/greeting
            http://localhost:3000/about/org
            http://localhost:3000/about/history
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
          configPath: ''
          budgetPath: './lighthouse-budget.json'
          # Assert category minimums: Perf/A11y ≥ 0.90
          assertions: >-
            {
              "categories:performance": ["error", {"minScore": 0.90}],
              "categories:accessibility": ["error", {"minScore": 0.90}]
            }

      - name: Comment Lighthouse report links
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        env:
          LHCI_LINKS: ${{ steps.lhci.outputs.links }}
        with:
          script: |
            const linksRaw = (process.env.LHCI_LINKS || '').trim();
            let body = 'Lighthouse completed (no links output).';
            if (linksRaw) {
              try {
                const parsed = JSON.parse(linksRaw);
                const lines = Object.entries(parsed).map(([k,v]) => `- ${k}: ${v}`);
                body = `Lighthouse reports (temporary):\n${lines.join('\n')}`;
              } catch {
                body = `Lighthouse reports (raw):\n${linksRaw.split('\n').map(l => `- ${l}`).join('\n')}`;
              }
            }
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            } catch (e) {
              core.warning(`Skipping LH report comment: ${e.message}`);
            }
